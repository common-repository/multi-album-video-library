<?php

// Example [multi_album_video_library per_page=3]
function mavl_shortcode($atts) {
  ob_start();
  $defaults = array(
    'request' => '/me/albums', // Can be /me/albums, /users/{user_id}/albums, /me/albums/{album_id}/videos, or /users/{user_id}/albums/{album_id}/videos
    'per_page' => '', // Number of items to show on each page. Max 100.
  );
  // $defaults and $atts merged and made into variables
  extract( shortcode_atts( $defaults, $atts ) );

  if((count($_GET) !== 0)) 
    $request = mavl_generate_request($_GET); // Generate request when there are parameters

  $uri = explode( '?', $request, 2 ); // Split base uri from parameters
  $params = explode( '&', $uri[1] ); // Store parameters to array
  $request_uri = $uri[0]; // The request URI without the parameters
  $type = mavl_uri_type( $request_uri ); // Set type whether albums, videos or video  
    
  // Main Display of All Albums, Videos and Video
  $options = array();
  
  // Add to $options from per_page Plugin Options
  $mavl_items_per_page = get_option( 'mavl_items_per_page' ); // Plugin options "Items Per Page"
  if( isset($mavl_items_per_page) ) 
    $options['per_page'] = $mavl_items_per_page; // Add per_page option. Exclude on single video request
  
  // Add/overlap to $options from merged $default and $atts
  foreach ($defaults as $default_key => $default_value)
    if(!empty(${$default_key}) && $default_key != 'request') 
      $options[$default_key] = ${$default_key};

  // Add/overlap to $options from $params generated by mavl_generate_request()
  foreach($params as $param) {
    $key_value = explode("=", $param);
    if(!empty($key_value[1])) 
      $options[$key_value[0]] = $key_value[1];
  }
  
  // Add page custom options
  if (get_query_var('page') > 0) 
    $options['page'] = get_query_var('page');
  
  $response = mavl_vimeo_request($request_uri, $options); // Vimeo request

  // Display videos on first album if there's only one album
  $mavl_show_first_album_videos = get_option( 'mavl_show_first_album_videos' );
  if( $request_uri == '/me/albums' && $response['body']['total'] == 1 && $mavl_show_first_album_videos == true ){
    $first_album_uri = $response['body']['data'][0]['uri']. '/videos'; // Album Videos URI
    $response = mavl_vimeo_request($first_album_uri, $options); // Vimeo request
    $type = 'videos';
  }
    

  mavl_grid_view($response, $type); // Display results
  return ob_get_clean();  
}
add_shortcode('multi_album_video_library', 'mavl_shortcode');
add_shortcode('mavl', 'mavl_shortcode');


// Generates URI based on $_GET parameters
function mavl_generate_request($param) {

  // Process URI  
  $user_set = (isset($param['users']) && !empty($param['users'])) ? true : false;
  $album_set = (isset($param['albums']) && !empty($param['albums'])) ? true : false;
  $video_set = (isset($param['videos']) && !empty($param['videos'])) ? true : false;
  
  if ( $user_set ) {
    $uri =  '/users/' . $param['users'];
    if ( ( !$album_set && !$video_set ) ) 
      $uri .= '/albums';
  } 
  else {
    $uri = ( $album_set || $video_set) ? '/me' : '/me/albums';
  }
  
  if ( $album_set ) {
    $uri .=  '/albums/' . $param['albums'];
    if ( !$video_set ) $uri .= '/videos';
  }
  
  if ( $video_set ) {
    $uri =  '/videos/' . $param['videos'];
  }
  $uri_request = $uri;


  // Define Valid Parameters
  $albums_GET_valid_param = array ('direction', 'page', 'per_page', 'query', 'sort');
  $videos_GET_valid_param = array ('containing_uri', 'direction', 'filter', 'filter_embeddable', 'page', 'per_page', 'query', 'sort', 'weak_search');

  // Extract Valid Parameters from $param
  $valid_param = array();

  // Add Custom Parameters from Plugin Options
  $per_page = 6;
  if( isset($per_page) ) $valid_param['per_page'] = $per_page; // Add per_page option. Exclude on single video request

  foreach ($albums_GET_valid_param as $p)
    if ( isset($param[$p]) ) 
      $valid_param[$p] = $param[$p];  
  
  // Process $valid_param for addition in URI with parameters
  $uri_parameters = array();
  foreach( $valid_param as $key => $value )
    $uri_parameters[] = $key . '=' . $value;
    
  $uri_request .= ($uri_parameters) ? '?' . implode('&',$uri_parameters) : '';
  
  return $uri_request;
}

// Generate Page link based on URI data
function mavl_generate_link($uri){
  $page_link = get_the_permalink();
  
  $uri_request = explode("?", $uri);
  $uri_request_param = $uri_request[1];
  
  $uri_request_params = array();
  $uri_request_params = explode("&",$uri_request_param);
  
  $uri = str_replace('/me/albums', '', $uri_request[0]);
  $uri_parts = explode("/", $uri);
  $uri_parts_count = count($uri_parts);

  $uri_turned_params = array();
  
  for ($i = 1; $i < $uri_parts_count; $i = $i + 2){
    $key = $uri_parts[$i];
    $value = $uri_parts[$i+1];
    if(!empty($value))
      $uri_turned_params[] = $key . "=" . $value;
  }
  
  $link_params = array_merge($uri_turned_params,$uri_request_params);
  
  return $page_link . '?' . implode("&", $link_params);
}

function mavl_title($type, $pre_text = '', $post_text = '') {
  switch($type) {
    default: case 'albums': $title = 'All Albums'; break;
    case 'videos': $title = 'Videos'; break;
    case 'video': $title = 'Video'; break;
  }
  return $pre_text . $title . $post_text;
}

function mavl_uri_type($uri) {
  if ( preg_match('/^\/me\/albums$/', $uri)
    || preg_match('/^\/users\/[1-9][0-9]*\/albums$/', $uri)) {
    return 'albums';
  }
  else if ( preg_match('/^\/me\/albums\/[1-9][0-9]*\/videos$/', $uri)
    || preg_match('/^\/users\/[1-9][0-9]*\/albums\/[1-9][0-9]*\/videos$/', $uri) ) {
    return 'videos';
  }
  else if ( preg_match('/^\/videos\/[1-9][0-9]*$/', $uri) ) {
    return 'video';
  }
  return false;
}

function mavl_get_album_data() {
  return mavl_vimeo_request($uri, $options);
}

function mavl_vimeo_request($uri, $options = null, $method = 'GET') {
  
  $expiration_time = 60*60;//in second (1 hour)
  $transient_name = mavl_transient_name($uri, $options, $method);
  $transient_value = get_transient($transient_name);

  if( false !== $transient_value ){
    $response = $transient_value;
  }else{
    $access_token = get_option( 'mavl_access_token' );
    $lib = new \Vimeo\Vimeo(null, null);
    $lib->setToken($access_token);
    $response = $lib->request($uri, $options, $method);    
    set_transient($transient_name,$response,$expiration_time);
  }

  return $response;
}

function mavl_transient_name($uri, $options, $method) {
  $param = '';
  if (!empty($options))
    foreach ($options as $key => $value)
      $params_string = $key . '=' . $value;
  
  $transient_name = esc_sql( $method . ' ' . $uri . '?' . $params_string );
  
  return $transient_name;
}

function mavl_album_data($album_id){
  if (!empty($album_id)){
    $uri = '/me/albums/' . $album_id;
    return mavl_vimeo_request($uri);
  }
  return false;
}

?>